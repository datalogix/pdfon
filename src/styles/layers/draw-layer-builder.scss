.canvasWrapper {
  svg {
    @apply transform-none;

    &[data-main-rotation="90"] {
      mask,
      use:not(.clip, .mask) {
        transform: matrix(0, 1, -1, 0, 1, 0);
      }
    }

    &[data-main-rotation="180"] {
      mask,
      use:not(.clip, .mask) {
        transform: matrix(-1, 0, 0, -1, 1, 1);
      }
    }

    &[data-main-rotation="270"] {
      mask,
      use:not(.clip, .mask) {
        transform: matrix(0, -1, 1, 0, 0, 1);
      }
    }

    &.highlight {
      @apply
        absolute
        mix-blend-multiply
      ;

      @media screen and (forced-colors: active) {
        @apply mix-blend-difference;
      }

      &:not(.free) {
        fill-rule: evenodd;
      }
    }

    &.highlightOutline {
      fill-rule: evenodd;

      @apply
        absolute
        mix-blend-normal
        fill-none
      ;

      &:not(.free) {
        &.hovered:not(.selected) {
          stroke: var(--hover-outline-color);
          stroke-width: var(--outline-width);
        }

        &.selected {
          .mainOutline {
            stroke: var(--outline-around-color);
            stroke-width: calc(
              var(--outline-width) + 2 * var(--outline-around-width)
            );
          }

          .secondaryOutline {
            stroke: var(--outline-color);
            stroke-width: var(--outline-width);
          }
        }
      }

      &.free {
        &.hovered:not(.selected) {
          stroke: var(--hover-outline-color);
          stroke-width: calc(2 * var(--outline-width));
        }

        &.selected {
          .mainOutline {
            stroke: var(--outline-around-color);
            stroke-width: calc(
              2 * (var(--outline-width) + var(--outline-around-width))
            );
          }

          .secondaryOutline {
            stroke: var(--outline-color);
            stroke-width: calc(2 * var(--outline-width));
          }
        }
      }
    }
  }
}
